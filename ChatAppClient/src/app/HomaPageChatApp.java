/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.awt.Image;

import java.io.IOException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import chatappclient.Client;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;

/**
 *
 * @author INSECT
 */
public class HomaPageChatApp extends javax.swing.JFrame {

    String Clientname, address = "localhost";
    ArrayList<String> clients = new ArrayList();
    int port_number = 1111;
    Boolean isConnected = false;

    Socket S;
    BufferedReader reader;
    PrintWriter writer;
   

    //XXXXXXXXXXXXXXXXXXXXXXXXX//
    public void ListenThread() {
        Thread IncomingReader = new Thread(new IncomingReader());
        IncomingReader.start();
    }

    //XXXXXXXXXXXXXXXXXXXXXXXX//
    public void clientAdd(String data) {
        clients.add(data);
    }

    //XXXXXXXXXXXXXXXXXXXXXXX//
    public void clientRemove(String data) {
        jTextArea2.append(data + "is not online");
    }
    //XXXXXXXXXXXXXXXXXXXXXXXX//

    public void writeclients() {
        String[] temperoryList = new String[(clients.size())];
        clients.toArray(temperoryList);
        for (String token : temperoryList) {
            //clients.append(token + "\n");   
        }
    }
    //XXXXXXXXXXXXXXXXXXXXXXX//

    public void send_Disconnect() {
        String bye = (Clientname + ": :Disconnect");
        {
            try {
                writer.println(bye);
                writer.flush();
            } catch (Exception ex) {
                jTextArea2.append("Cloud has not sent disconnect message. \n");
            }
        }

        //XXXXXXXXXXXXXXXXXXXXXXXX//
        /**
         *
         */
    }

    public void Disconnect() {
        try {
            jTextArea2.append("Client is Disconnected. \n");
            S.close();
        } catch (Exception e) {
            jTextArea2.append("Failed to disconnect the client. \n");
        }
        isConnected = false;
        txt_name.setEditable(true);
    }

    @SuppressWarnings("empty-statement")
    public HomaPageChatApp() {
        initComponents();
 

    }

   public class IncomingReader implements Runnable
    {
       @Override
       public void run()
       {
        String[] dataset;
        String stream, done ="Done", connect = "Connect", disconnect = "Disconnect", chat = "Chat";
        
        try
        {
            while((stream = reader.readLine()) != null)
            {
                dataset = stream.split(":");
                if (dataset[2].equals(chat))
                {
                   jTextArea2.append(dataset[0] + ":" +dataset[1] + "\n");
                   jTextArea2.setCaretPosition(jTextArea2.getDocument().getLength());
                }
                else if (dataset[2].equals(connect))
                {
                    jTextArea2.removeAll();
                    clientAdd(dataset[0]);
                }
                else if (dataset[2].equals(disconnect))
                {
                    clientRemove(dataset[0]);
                }
                    //clients.setText("");
                    writeclients();
                    clients.clear();
                }
                
            }catch(Exception e) {}
    
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txt_name = new javax.swing.JTextField();
        btn_connect = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        btn_connect1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nameActionPerformed(evt);
            }
        });
        getContentPane().add(txt_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 100, 30));

        btn_connect.setBackground(new java.awt.Color(255, 0, 0));
        btn_connect.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 12)); // NOI18N
        btn_connect.setText("Odaya Gır");
        btn_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_connectActionPerformed(evt);
            }
        });
        getContentPane().add(btn_connect, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, 120, 30));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 180, 190));
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 100, 30));

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 12)); // NOI18N
        jButton1.setText("Sohbet Odası Olustur");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 160, 30));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 180, 190));

        jLabel3.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Chat Odaları");
        jLabel3.setToolTipText("");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 110, 100, 20));

        jLabel4.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Çevrimiçi Üyeler");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        jLabel1.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Oda ismi");
        jLabel1.setToolTipText("");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 60, 30));

        btn_connect1.setBackground(new java.awt.Color(255, 0, 0));
        btn_connect1.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 12)); // NOI18N
        btn_connect1.setText("Kayıt Ol");
        btn_connect1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_connect1ActionPerformed(evt);
            }
        });
        getContentPane().add(btn_connect1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 20, 160, 30));

        jLabel6.setFont(new java.awt.Font("Bell Gothic Std Black", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("Nick");
        jLabel6.setToolTipText("");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_connectActionPerformed

//

    }//GEN-LAST:event_btn_connectActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        //form kapanırken clienti durdur
        Client.Stop();
    }//GEN-LAST:event_formWindowClosing

    private void txt_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nameActionPerformed

    private void btn_connect1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_connect1ActionPerformed
 if(isConnected == false)
        {
            Clientname = txt_name.getText();
            txt_name.setEditable(false);
            
            try
            {
                    S = new Socket(address, port_number);
                    InputStreamReader streamreader = new InputStreamReader(S.getInputStream());
                    reader = new BufferedReader(streamreader);
                    writer = new PrintWriter(S.getOutputStream());
                    writer.println(Clientname + ":the client is connected: client");
                    writer.flush();
                    isConnected = true;
            }
             catch(Exception e)
             {
                 jTextArea2.append("Cannot connect to the server at this moment! Please try again later!! \n");
                 txt_name.setEditable(true);
             }
            ListenThread();
            
        } else if (isConnected == true)
        {
                jTextArea2.append("You are already connected to the server. \n");
        }

    }//GEN-LAST:event_btn_connect1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomaPageChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomaPageChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomaPageChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomaPageChatApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomaPageChatApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btn_connect;
    public javax.swing.JButton btn_connect1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTextArea jTextArea1;
    public javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    public javax.swing.JTextField txt_name;
    // End of variables declaration//GEN-END:variables
}
